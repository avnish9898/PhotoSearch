{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\avnish\\\\Desktop\\\\PepCodingWebd\\\\projects\\\\searchmovie\\\\src\\\\component\\\\PhotoSearch.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PhotoSearch(props) {\n  _s();\n\n  let flickr;\n  const url = 'https://www.flickr.com/services/rest/?method=flickr.photos.getRecent&api_key=aeafe065ace713b9cedb10b958dfa6a3&format=json&nojsoncallback=1&api_sig=891c234ff88565ed46c43c3dc792b94a';\n  const url2 = 'https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=aeafe065ace713b9cedb10b958dfa6a3&text=Value&format=json&nojsoncallback=1&api_sig=fecd019069cc63aac9ff4d8e58dddf95';\n  let [photos, setPhotos] = useState([]);\n  let [currText, setCurrText] = useState(\"\");\n  useEffect(async () => {\n    let resp = await fetch(url); //  resp.photos.getRecent\n\n    let data = await resp.json();\n    let arr = [...data[\"photos\"][\"photo\"]];\n    arr.photos.se;\n    setPhotos(arr);\n  });\n\n  const searchMovie = async () => {\n    if (currText != \"\") {\n      let resp = await fetch(url2); //  resp.photos.getRecent\n\n      let data = await resp.json();\n      let filterPhotos = data[\"photos\"][\"photo\"].filter(obj => {\n        return obj[\"title\"].includes(currText);\n      });\n      filterPhotos.map(obj => {\n        console.log(obj[\"title\"]);\n      });\n\n      if (filterPhotos.length > 0) {\n        setPhotos(filterPhotos);\n      }\n    }\n  };\n\n  const handleCurrText = e => {\n    setCurrText(e.target.value);\n    searchMovie();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      handleCurrText: handleCurrText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"imgContainer\",\n      children: photos.map(movieObj => {\n        let serverId = movieObj[\"server\"];\n        let id = movieObj[\"id\"];\n        let secret = movieObj[\"secret\"];\n        let url = \"https://live.staticflickr.com/\" + serverId + \"/\" + id + \"_\" + secret + \".jpg\";\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 19\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PhotoSearch, \"k4BTx54bz4CzyEjB+289H5BzoSM=\");\n\n_c = PhotoSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhotoSearch\");","map":{"version":3,"sources":["C:/Users/avnish/Desktop/PepCodingWebd/projects/searchmovie/src/component/PhotoSearch.jsx"],"names":["React","useEffect","useState","Navbar","PhotoSearch","props","flickr","url","url2","photos","setPhotos","currText","setCurrText","resp","fetch","data","json","arr","se","searchMovie","filterPhotos","filter","obj","includes","map","console","log","length","handleCurrText","e","target","value","movieObj","serverId","id","secret"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAEzC,MAAIC,MAAJ;AACE,QAAMC,GAAG,GAAC,qLAAV;AACA,QAAMC,IAAI,GAAC,6LAAX;AAEA,MAAI,CAACC,MAAD,EAAQC,SAAR,IAAmBR,QAAQ,CAAC,EAAD,CAA/B;AAEF,MAAI,CAACS,QAAD,EAAUC,WAAV,IAAuBV,QAAQ,CAAC,EAAD,CAAnC;AACED,EAAAA,SAAS,CAAC,YAAU;AACjB,QAAIY,IAAI,GAAC,MAAMC,KAAK,CAACP,GAAD,CAApB,CADiB,CAElB;;AACC,QAAIQ,IAAI,GAAC,MAAMF,IAAI,CAACG,IAAL,EAAf;AACA,QAAIC,GAAG,GAAC,CAAC,GAAGF,IAAI,CAAC,QAAD,CAAJ,CAAe,OAAf,CAAJ,CAAR;AACDE,IAAAA,GAAG,CAACR,MAAJ,CAAWS,EAAX;AACER,IAAAA,SAAS,CAACO,GAAD,CAAT;AACH,GAPQ,CAAT;;AAQA,QAAME,WAAW,GAAE,YAAU;AAC3B,QAAGR,QAAQ,IAAE,EAAb,EAAgB;AAChB,UAAIE,IAAI,GAAC,MAAMC,KAAK,CAACN,IAAD,CAApB,CADgB,CAEhB;;AACC,UAAIO,IAAI,GAAC,MAAMF,IAAI,CAACG,IAAL,EAAf;AAED,UAAII,YAAY,GAACL,IAAI,CAAC,QAAD,CAAJ,CAAe,OAAf,EAAwBM,MAAxB,CAAgCC,GAAD,IAAO;AACrD,eAAOA,GAAG,CAAC,OAAD,CAAH,CAAaC,QAAb,CAAsBZ,QAAtB,CAAP;AACD,OAFgB,CAAjB;AAGAS,MAAAA,YAAY,CAACI,GAAb,CAAkBF,GAAD,IAAO;AACtBG,QAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAAC,OAAD,CAAf;AACD,OAFD;;AAGA,UAAGF,YAAY,CAACO,MAAb,GAAoB,CAAvB,EAAyB;AAEtBjB,QAAAA,SAAS,CAACU,YAAD,CAAT;AACF;AACF;AACA,GAjBD;;AAmBD,QAAMQ,cAAc,GAAEC,CAAD,IAAK;AACxBjB,IAAAA,WAAW,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACAZ,IAAAA,WAAW;AACZ,GAHD;;AAIC,sBAEI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACO,QAAC,MAAD;AAAQ,MAAA,cAAc,EAAES;AAAxB;AAAA;AAAA;AAAA;AAAA,YADP,eAGA;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBAEInB,MAAM,CAACe,GAAP,CAAYQ,QAAD,IAAY;AACrB,YAAIC,QAAQ,GAACD,QAAQ,CAAC,QAAD,CAArB;AACA,YAAIE,EAAE,GAACF,QAAQ,CAAC,IAAD,CAAf;AACA,YAAIG,MAAM,GAACH,QAAQ,CAAC,QAAD,CAAnB;AACA,YAAIzB,GAAG,GAAC,mCAAiC0B,QAAjC,GAA0C,GAA1C,GAA8CC,EAA9C,GAAiD,GAAjD,GAAqDC,MAArD,GAA4D,MAApE;AACE,4BACE;AAAK,UAAA,GAAG,EAAE5B;AAAV;AAAA;AAAA;AAAA;AAAA,gBADF;AAGH,OARD;AAFJ;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAqBH;;GA7DuBH,W;;KAAAA,W","sourcesContent":["import React,{useEffect,useState} from 'react'\r\nimport Navbar from './Navbar'\r\n\r\nexport default function PhotoSearch(props) {\r\n\r\n  let flickr\r\n    const url='https://www.flickr.com/services/rest/?method=flickr.photos.getRecent&api_key=aeafe065ace713b9cedb10b958dfa6a3&format=json&nojsoncallback=1&api_sig=891c234ff88565ed46c43c3dc792b94a'\r\n    const url2='https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=aeafe065ace713b9cedb10b958dfa6a3&text=Value&format=json&nojsoncallback=1&api_sig=fecd019069cc63aac9ff4d8e58dddf95'\r\n\r\n    let [photos,setPhotos]=useState([])\r\n\r\n  let [currText,setCurrText]=useState(\"\")\r\n    useEffect(async ()=>{\r\n       let resp=await fetch(url)\r\n      //  resp.photos.getRecent\r\n       let data=await resp.json();\r\n       let arr=[...data[\"photos\"][\"photo\"]]\r\n      arr.photos.se\r\n        setPhotos(arr)\r\n    })\r\n    const searchMovie= async ()=>{\r\n      if(currText!=\"\"){\r\n      let resp=await fetch(url2)\r\n      //  resp.photos.getRecent\r\n       let data=await resp.json();\r\n      \r\n      let filterPhotos=data[\"photos\"][\"photo\"].filter((obj)=>{\r\n        return obj[\"title\"].includes(currText)\r\n      })\r\n      filterPhotos.map((obj)=>{\r\n        console.log(obj[\"title\"]);\r\n      })\r\n      if(filterPhotos.length>0){\r\n        \r\n         setPhotos(filterPhotos)\r\n      }\r\n    }\r\n    }\r\n\r\n   const handleCurrText=(e)=>{\r\n     setCurrText(e.target.value)\r\n     searchMovie()\r\n   }\r\n    return (\r\n    \r\n        <div className=\"App\">\r\n               <Navbar handleCurrText={handleCurrText}></Navbar>\r\n\r\n        <div className=\"imgContainer\">\r\n          {\r\n            photos.map((movieObj)=>{\r\n              let serverId=movieObj[\"server\"]\r\n              let id=movieObj[\"id\"]\r\n              let secret=movieObj[\"secret\"]\r\n              let url=\"https://live.staticflickr.com/\"+serverId+\"/\"+id+\"_\"+secret+\".jpg\"\r\n                return(\r\n                  <img src={url}/>\r\n                )\r\n            })\r\n     }\r\n    \r\n        </div>\r\n        </div>\r\n      );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}